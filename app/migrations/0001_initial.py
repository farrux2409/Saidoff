# Generated by Django 4.2.16 on 2024-09-28 11:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_en', models.CharField(max_length=100, null=True)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_uz', models.CharField(max_length=100, null=True)),
                ('inform', models.TextField()),
                ('inform_en', models.TextField(null=True)),
                ('inform_ru', models.TextField(null=True)),
                ('inform_uz', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='media/')),
            ],
        ),
        migrations.CreateModel(
            name='FaqType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FeadBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='media/')),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_uz', models.TextField(null=True)),
                ('profession', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Partners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='media/')),
            ],
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('price_en', models.IntegerField(null=True)),
                ('price_ru', models.IntegerField(null=True)),
                ('price_uz', models.IntegerField(null=True)),
                ('limit_user', models.CharField(max_length=100)),
                ('limit_user_en', models.CharField(max_length=100, null=True)),
                ('limit_user_ru', models.CharField(max_length=100, null=True)),
                ('limit_user_uz', models.CharField(max_length=100, null=True)),
                ('limit_date', models.CharField(max_length=100)),
                ('limit_date_en', models.CharField(max_length=100, null=True)),
                ('limit_date_ru', models.CharField(max_length=100, null=True)),
                ('limit_date_uz', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_en', models.CharField(max_length=100, null=True)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_uz', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='WhyUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('title_en', models.CharField(blank=True, max_length=100, null=True)),
                ('title_ru', models.CharField(blank=True, max_length=100, null=True)),
                ('title_uz', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(upload_to='media/')),
                ('description', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_uz', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Workers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='media/')),
                ('profession', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('service_cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.servicecategory')),
            ],
        ),
        migrations.AddField(
            model_name='servicecategory',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.services'),
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='media/')),
                ('link', models.URLField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.services')),
                ('tags', models.ManyToManyField(to='app.tags')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message="Telefon raqami +998 (XX) XXX XX XX formatida bo'lishi kerak.", regex='^\\+998\\s?\\(\\d{2}\\)\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}$')])),
                ('message', models.TextField()),
                ('is_checkout', models.BooleanField(default=False)),
                ('service_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.services')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_en', models.CharField(max_length=100, null=True)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_uz', models.CharField(max_length=100, null=True)),
                ('is_checkout', models.BooleanField(default=False)),
                ('price_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.pricelist')),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('question_en', models.TextField(null=True)),
                ('question_ru', models.TextField(null=True)),
                ('question_uz', models.TextField(null=True)),
                ('answer', models.TextField()),
                ('answer_en', models.TextField(null=True)),
                ('answer_ru', models.TextField(null=True)),
                ('answer_uz', models.TextField(null=True)),
                ('faq_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.faqtype')),
            ],
        ),
    ]
